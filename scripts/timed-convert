#!/bin/bash

# SYNOPSIS:
# - The script takes no argument and is run from cron job every 4 minutes (TBD)
# - This script takes the first entry of mark4convert.txt in archive dir which
#   is the directory of newly split full-res footage:
#   $ARCHIVE/$DATE/$SOURCEFILE and outputs to $SOURCEFILE/output
# - The script should check for running ffmpeg and halts when true
# - Upon successful conversion it deletes source file and mark4convert.txt entry

# ASSUMPTIONS:
# - File splitting is done *MUCH* faster than conversion (confirmed)
# - File conversion can be deferred to splitting

#Set Path for ffmpeg Libraries -- cron compat
export LD_LIBRARY_PATH=/usr/lib/

TXTPATH="/media/flash/archive/mark4convert.txt"
LOGPATH="/media/flash/archive/timed-convert.txt"
INFILE=$(cat $TXTPATH | head -n 1)

# second level parent i.e. ../FULLRES/N.mp4
PARENT=$(dirname $INFILE)
PARENT=$(dirname $PARENT)

OUTFILE="$PARENT/$(basename -s ".mp4" $INFILE).mp4"

echo "Converting $INFILE to $OUTFILE" >> $LOGPATH
ffmpeg -hide_banner -i $INFILE -c:v hevc_nvmpi -b:v 250k -vf scale=w=iw/3:h=ih/3 $OUTFILE

# Check validity of the output file by making sure it's > 500k

# Delete source file after conversion
echo "Deleted $INFILE"
rm $INFILE

# Delete mark entry after conversion
echo "Succesfully converted $INFILE to $OUTFILE" >> $LOGPATH

cat $TXTPATH > $TXTPATH.old
cat $TXTPATH.old | tail -n +2 > $TXTPATH

# this invalidates archive LOL
###echo "Succesfully converted $(cat $TXTPATH | head -n 1)" >> $LOGPATH
###awk 'NR > 1 { print }' < /media/flash/archive/mark4convert.txt





